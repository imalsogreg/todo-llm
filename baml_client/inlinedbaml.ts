/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
const fileMap = {
  
  "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}",
  "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"typescript/react\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.86.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode async\n}\n",
  "todo.baml": "class TodoItem {\n    id int\n    title string\n    created_at int\n    completed_at int?\n    deleted bool\n    tags Tag[]\n}\n\nclass TodoList {\n    items TodoItem[]\n}\n\nenum Tag {\n    Work\n    Personal\n    Errands\n    @@dynamic\n}\n\ntype Tool = MessageToUser | AddItem | AdjustItem\n\nclass MessageToUser {\n    type \"message_to_user\" @stream.not_null\n    message string @stream.not_null @stream.with_state\n}\n\nclass AdjustItem {\n    type \"adjust_item\" @stream.not_null\n    item_id int\n    title string?\n    completed_at int?\n    deleted bool?\n    tags Tag[]?\n    @@stream.done\n}\n\nclass AddItem {\n    type \"add_item\" @stream.not_null\n    title string @stream.not_null\n    tags Tag[]\n    @@stream.done\n}\n\nclass GetDateTime {\n    type \"get_date_time\" @stream.not_null\n    @@stream.done\n}\n\n\nclass ToolCallResult {\n    tool_call Tool\n    result int?\n}\n\nclass State {\n    tool_history ToolCallResult[]\n    todo_list TodoList\n}\n\nclass Query {\n    message string\n    date_time int\n}\n\nfunction SelectTools(state: State, query: Query) -> Tool[] {\n    client \"openai/gpt-4o\"\n    prompt #\"\n        You are a helpful assistant that can help with your todo list.\n        You can adjust an item, add an item, or get the last item id.\n        Here is the state:\n        {{ state }}\n\n        When the user specifies relative times, use the current time and their\n        time delta to determine an absolute time. Never return a value like \"1745877191 - 7200\".\n        Instead, return a value like \"1745870191\".\n\n        When updating an item, you may be tempted to only fill out the fields\n        that need chaning. But it's important instead to fill out all the fields.\n        If you don't want to update a field, set it to the existing value.\n\n        If the user mentions finishing an item that isn't on the list, inform them that\n        it's not on the list. Prefix that messages with \"UNKWOWN ITEM\".\n\n        User query: {{ query.message }}\n        That message was sent at {{ query.date_time }}\n\n        {{ ctx.output_format }}\n    \"#\n}\n\ntest NewFirstItem {\n    functions [SelectTools]\n    args {\n        state {\n            tool_history []\n            todo_list {\n                items []\n            }\n        }\n        query {\n            message \"Add 'Take otu the trash' to Errands\"\n            date_time 1719225600\n        }\n    }\n}\n\ntest NewAdvice {\n    functions [SelectTools]\n    args {\n        state {\n            tool_history []\n            todo_list {\n                items []\n            }\n        }\n        query {\n            message \"Help\"\n            date_time 1719225600\n        }\n    }\n}\n\ntest CompleteSecondItem {\n    functions [SelectTools]\n    args {\n        state {\n            tool_history []\n            todo_list {\n                items [\n                    {\n                        id 1\n                        title \"Take out the trash\"\n                        created_at 1719225600\n                        completed_at null\n                        deleted false\n                        tags [Errands]\n                    },\n                    {\n                        id 2\n                        title \"Buy groceries\"\n                        created_at 1719225600\n                        completed_at null\n                        deleted false\n                        tags [Errands]\n                    }\n                ]\n            }\n        }\n        query {\n            message \"I bought the groceries 5 hours ago\"\n            date_time 1719225600\n        }\n    }\n}",
}
export const getBamlFiles = () => {
    return fileMap;
}