/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  AddItem,  AdjustItem,  GetDateTime,  MessageToUser,  Query,  State,  Tag,  TodoItem,  TodoList,  ToolCallResult } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
    value: T
    state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    
    export interface AddItem {
        type: "add_item"
        title: string
        tags?: (string | Tag | null)[]
    }
    
    export interface AdjustItem {
        type: "adjust_item"
        item_id?: (number | null)
        title: ((string | null) | null)
        completed_at: ((number | null) | null)
        deleted: ((boolean | null) | null)
        tags: ((string | Tag | null)[] | null)
    }
    
    export interface GetDateTime {
        type: "get_date_time"
    }
    
    export interface MessageToUser {
        type: "message_to_user"
        message: string
    }
    
    export interface Query {
        message?: (string | null)
        date_time?: (number | null)
    }
    
    export interface State {
        tool_history?: (partial_types.ToolCallResult | null)[]
        todo_list?: (partial_types.TodoList | null)
    }
    
    export interface TodoItem {
        id?: (number | null)
        title?: (string | null)
        created_at?: (number | null)
        completed_at: ((number | null) | null)
        deleted?: (boolean | null)
        tags?: (string | Tag | null)[]
    }
    
    export interface TodoList {
        items?: (partial_types.TodoItem | null)[]
    }
    
    export interface ToolCallResult {
        tool_call?: ((partial_types.MessageToUser | null) | (types.AddItem | null) | (types.AdjustItem | null) | null)
        result: ((number | null) | null)
    }
    
}